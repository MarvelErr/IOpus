<!DOCTYPE html>
<html>
<head lang="en">
    <meta charset="UTF-8">
    <title>Position</title>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="/bower_components/bootstrap/dist/css/bootstrap.min.css"/>
    <link rel="stylesheet" href="/bower_components/font-awesome-4.3.0/css/font-awesome.css"/>
    <link rel="stylesheet/less" href="/stylesheets/blogList/default.less"/>
    <script src="/bower_components/jquery/dist/jquery.min.js"></script>
    <script src="/bower_components/bootstrap/dist/js/bootstrap.min.js"></script>
    <script src="/bower_components/less/dist/less.min.js"></script>
</head>
<body>
<article>
    <div class="container">
        <div class="row">
            <div class="col-xs-12">
                <header>
                    <h3>HTML中元素的位置属性</h3>
                </header>
            </div>
        </div>
        <div class="row">
            <div class="col-xs-12">
                <section>
                    <h4><span class="fa fa-bookmark"></span>BOX宽、高的计算</h4>
                    <p>首先看现代浏览器对BOX宽、高的计算的差异</p>
<pre>
IE,Chrome:BOXHeight=height+margin-top+margin-bottom
FireFox:BOXHeight=height+margin-top+margin-bottom+padding-top+padding-bottom
</pre>
                    <p class="warning"><span class="fa fa-tag"></span>也就是说，IE和Chrome设置height/width的时候是包括padding的，而FF不包括，
                    从而也造成了下面clientHeight/width等的差异</p>
                </section>
                <section>
                    <h4><span class="fa fa-bookmark"></span>clientHeight，offsetHeight，scrollHeight</h4>
                    <p>clientHeight指元素的可见高度，offsetHeight是元素的高度(height值决定)，scrollHeight指整体高度</p>
                    <p>当一个元素没有水平滚动条的时候，这三者是相等的，仅存在水平滚动条的时候，计算方式为：</p>
<pre>
offsetHeight=contentHeight+padding-top+padding-bottom
scrollHeight=clientHeight=offsetHeight-heightOfScroll(滚动条自身的高度)
</pre>
                    <p class="warning"><span class="fa fa-tag"></span>这三者的值都不会包括margin</p>
                    <p>当存在垂直滚动条的时候：</p>
<pre>
scrollHeight=内部溢出元素的BOXHeight+padding-top+padding-bottom//Chrome
scrollHeight=内部溢出元素的BOXHeight+padding-top//IE,FF
</pre>
                </section>
                <section>
                    <h4><span class="fa fa-bookmark"></span>offsetTop，offsetLeft</h4>
                    <p>这两个属性表示元素离其最近的已经定位的父级元素的偏移，如果没有，相对body获取偏移量,从元素的边框位置开始计算</p>
                    <h5>jQuery中的<em>offset()</em>和<em>position()</em>方法</h5>
                    <p>offset()方法总是返回元素相对于文档的偏移量，而position()方法计算的是元素相对于已定位的父级元素的偏移量</p>
                    <p class="warning"><span class="fa fa-tag"></span>position()方法计算偏移量的时候是从margin开始计算的</p>
                </section>
                <section>
                    <h4><span class="fa fa-bookmark"></span>scrollTop，scrollLeft</h4>
                    <p>这两个属性表示元素滚动条滚动的距离，存在滚动条时这两个属性才有意义</p>
                    <h5>jQuery中的<em>scrollLeft()</em>和<em>scrollTop()</em>方法</h5>
                    <p>这两个方法就是返回这两个元素的值</p>
                </section>
            </div>
        </div>
    </div>
</article>
</body>
</html>
