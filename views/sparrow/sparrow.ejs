<!doctype html>
<html lang="zh">
<head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
    <link rel="stylesheet" href="/bower_components/bootstrap/dist/css/bootstrap.min.css"/>
    <link rel="stylesheet" href="/bower_components/font-awesome-4.3.0/css/font-awesome.css"/>
    <link href="/stylesheets/sparrow/style.css" rel="stylesheet" type="text/css" media="all"/>
    <!--fonts-->
    <link href='http://fonts.useso.com/css?family=Lato:100,300,400,700,900,100italic,300italic,400italic,700italic,900italic'
          rel='stylesheet' type='text/css'>
    <script src="/bower_components/jquery/dist/jquery.min.js"></script>
    <!--<script type="application/x-javascript"> addEventListener("load", function() { setTimeout(hideURLbar, 0); }, false); function hideURLbar(){ window.scrollTo(0,1); } </script>-->
    <script type="text/javascript" src="/js/sparrow/move-top.js"></script>
    <script type="text/javascript" src="/js/sparrow//easing.js"></script>
    <script type="text/javascript">
        jQuery(document).ready(function ($) {
            $(".scroll").click(function (event) {
                event.preventDefault();
                $('html,body').animate({scrollTop: $(this.hash).offset().top}, 1000);
            });
        });
    </script>

    <script src="/bower_components/bootstrap/dist/js/bootstrap.min.js"></script>
    <script src="/bower_components/less/dist/less.min.js"></script>
    <script>
        (function () {
            var sparrowID=0;
            function _sparrow() {
                this.viewModels = {};
                this.watchers = [];
                this.registerModel = function (name, model) {
                    this.viewModels[name] = model;
                    this.viewModels[name].id=name;
                    return this;
                };
            }
            var sparrow = new _sparrow();
            /*启动应用*/
            _sparrow.prototype.bootstrap = function () {
                $(function () {
                    sparrow.modelCheck();
                    sparrow.viewCheck();
                    sparrow.dirtyCheck();
                })
            };
            /*初始化VM*/
            _sparrow.prototype.modelCheck = function () {
                $('[viewModel]').each(function () {
                    //每一个model的第一层父model
                    var parent = $(this).parents('[viewModel]')[0];
                    var parentModelName = parent && $(this).parents('[viewModel]').attr('viewModel');
                    var modelName = $(this).attr('viewModel');
                    //原型的修改，继承的实现
                    if (parentModelName) {
                        var childObj = Object.create(sparrow.viewModels[parentModelName]);
                        var propertyNames = Object.getOwnPropertyNames(sparrow.viewModels[modelName]);
                        for (var i = 0; i < propertyNames.length; i++) {
                            childObj[propertyNames[i]] = sparrow.viewModels[modelName][propertyNames[i]];
                        }
                        childObj.proto = sparrow.viewModels[parentModelName];
                        sparrow.viewModels[modelName] = childObj;
                    }
                });
            };
            /*修正数据模型，初始化检测对象*/
            function reviseViewModel(model,propName,elem){
                if(model.hasOwnProperty(propName)){
                    var watch={
                        model:model.id,
                        watchName:propName,
                        watchElem:elem,
                        old:model[propName]
                    };
                    sparrow.watchers.push(watch);
                    return model[propName]
                }else{
                    arguments.callee(model.proto,propName,elem);
                }
            }
            /*数据绑定*/
            _sparrow.prototype.viewCheck=function(){
                $('[data-sparrow]').each(function(){
                    var propName=$(this).data('sparrow');
                    var modelName = $(this).parents('[viewModel]').attr('viewModel');
                    var model=sparrow.viewModels[modelName];
                    reviseViewModel(model,propName,$(this));
                    $(this).prop('nodeName')=='INPUT'?$(this).val(model[propName]):$(this).html(model[propName])
                });
            };

            /*脏值检查*/
            _sparrow.prototype.dirtyCheck = function () {
                var existDirtyData = false;
                for(var i=0;i<sparrow.watchers.length;i++){
                    var viewModel=sparrow.viewModels[sparrow.watchers[i].model],watchName=sparrow.watchers[i].watchName,
                            elem=sparrow.watchers[i].watchElem,old=sparrow.watchers[i].old;
                    var viewValue=elem.prop('nodeName')=='INPUT'?elem.val():elem.html();
                    if(viewModel[watchName]!=viewValue){
                        existDirtyData=true;
                        if(elem.prop('nodeName')=='INPUT'){
                            if(elem.val()==old){
                                elem.val( viewModel[watchName]);
                            }else{
                                viewModel[watchName]=elem.val();
                            }
                        }else{
                            if(elem.html()==old){
                                elem.html( viewModel[watchName])
                            }else{
                                viewModel[watchName]=elem.html();
                            }
                        }
                        sparrow.watchers[i].old=viewModel[watchName];
                    }
                }
                existDirtyData && arguments.callee();
            };
            _sparrow.prototype.safeChange = function (func) {
                func();
                this.dirtyCheck();
            };
            /*前端路由的实现*/

            window.sparrow = sparrow;
        })()
    </script>
    <script>
        (function () {
            sparrow.registerView = function (name, path, parentView) {
                sparrow.views = sparrow.views == undefined ? {} : sparrow.views
                sparrow.views[name] = {};
                sparrow.views[name].path = path;
                parentView && (sparrow.views[name].parentView = parentView)
                return this;
            }
            /*视图的跳转，支持二级视图，但是有异步操作也许有bug*/
            sparrow.go = function (viewName, parentBeResolved) {
                var parentView = sparrow.views[viewName].parentView;
                if (parentView) {
                    $.get(sparrow.views[parentView].path).success(function (data) {
                        $('[sparrow-view]').empty().append(data);
                        $.get(sparrow.views[viewName].path, function (data) {
                            $('[sparrow-view]').find('[sparrow-view]').empty().append(data);
                            sparrow.bootstrap();
                        })
                    })
                } else {
                    $.get(sparrow.views[viewName].path, function (data) {
                        $('[sparrow-view]').empty().append(data);
                        sparrow.bootstrap();
                    })
                }
            }
        })()
    </script>
    <script>
        /*demo*/
        sparrow.registerModel('A',{name:'AVM',character:'parentDOMNode',input:''}).registerModel('a',{name:'aaVM'}).registerView('home', '/makeEZ/test.html').registerView('inner', '/makeEZ/inner.html', 'home')
        console.log(sparrow);
        sparrow.bootstrap();
        //        sparrow.go('home');
    </script>
</head>
<body>
<div id="home" class="banner">
    <div class="container">
        <div class="banner-info text-center">
            <img src="/pic/sparrow/sparrow.png" alt=""/>
            <h2>WELCOME TO SPARROW.JS</h2>
            <h1 style="font-style: italic">Though small perfectly formed</h1>
            <!--<h4>麻雀虽小，五脏俱全</h4>-->
            <div class="learnmore"><a href="#" class="hvr-sweep-to-right button">LEARN MORE</a></div>
            <div class="arrow-icon"><a class="scroll" href="#about"><img src="/pic/sparrow/3.png" alt=" "/></a></div>
        </div>
    </div>
</div>
<div id="about" class="about">
    <div class="container">
        <div class="col-md-12 about-left">
            <h3>I am sparrow!</h3>

            <div class="strip"></div>
            <h2>一个小巧，简单的前端mvvm框架</h2>

            <p>实现了数据绑定，前端路由等功能，使用很简单，只需要导入sparrow.js就可以了。依赖于jQuery，所以别忘了jQuery哦！</p>
<pre>
&lt;script src="xx/jQuery.js"&gt;&lt;/script&gt;
&lt;script src="xx/sparrow.js"&gt;&lt;/script&gt;
</pre>
        </div>
        <div class="clearfix"></div>
    </div>
</div>
<!-- //about-us -->
<!-- what-we-do -->
<div id="what-we-do" class="what-we-do">
    <div class="container">
        <div class="col-md-12 what-info">
            <h3>Start to use it</h3>
            <div class="strip"></div>
            <h2>注册一个数据模型</h2>
<pre>
sparrow.registerModel('A',{name:'AVM',character:'parentDOMNode',input:''}).
    registerModel('a',{name:'aaVM'})
</pre>
            <h2>HTML中使用这个数据模型</h2>
<pre>
&lt;div viewModel="A"&gt;
    &lt;span&gt;the name of model "A"&lt;/span&gt;&lt;span data-sparrow="name"&gt;&lt;/span&gt;
    &lt;div viewModel="a"&gt;
        &lt;span&gt;the name of model "a"&lt;span data-sparrow="name"&gt;&lt;/span&gt;&lt;br/&gt;
        &lt;span&gt;the character of model "a"&lt;span data-sparrow="character"&gt;&lt;/span&gt;&lt;br/&gt;
    &lt;/div&gt;
&lt;/div&gt;
</pre>
            <p>效果如下：</p>
            <div viewModel="A" class="code-show">
                <span>the name of model "A"：</span><span data-sparrow="name"></span>
                <div viewModel="a">
                    <span>the name of model "a"：</span><span data-sparrow="name"></span><br/>
                    <span>the character of model "a"：</span><span data-sparrow="character"></span><br/>
                </div>
            </div>
            <p class="small-p">基于DOM结构实现原型继承。</p>
        </div>
    </div>
</div>
<div id="about" class="about">
    <div class="container">
        <div class="col-md-12 about-left">
            <h3>Data Bind</h3>
            <div class="strip"></div>
            <h2>双向数据绑定</h2>
            <p>Sparrow.js同时提供了双向数据绑定的功能，类似于Angular中的双向数据绑定。</p>
<pre>
&lt;div model="A"&gt;
    &lt;span&gt;your input：&lt;/span&gt;&lt;span data-sparrow="input"&gt;&lt;/span&gt;
    &lt;span&gt;input anything&lt;/input&gt;&lt;span data-sparrow="input"&gt;
&lt;/div&gt;
</pre>
            <p>效果如下：</p>
            <div viewModel="A" class="code-show">
                <span>your input：</span><span data-sparrow="input"></span><br/>
                <span>input anything：</span><input data-sparrow="input" type="text"/>
            </div>
        </div>
        <div class="clearfix"></div>
    </div>
</div>

<!-- here stars scrolling icon -->
<script type="text/javascript">
    $(document).ready(function () {
        $().UItoTop({easingType: 'easeOutQuart'});
    });
</script>

<!--<div model="A">
    <span data-sparrow="name"></span>

    <div model="a-A">
        <div model="aa-a">
            <span data-sparrow="age"></span>
        </div>
        <span data-sparrow="addr"></span><br/>
    </div>

    <span data-sparrow="age"></span>
    <span data-sparrow="input"></span>
    <input data-sparrow="input" type="text"/>
    <br/>
    <textarea data-sparrow="input" name="" id="" cols="30" rows="10">
    </textarea>

    <div sparrow-view="main">
        <div sparrow-view="inner"></div>
    </div>
</div>-->
<!--<button>dirtyCheck</button>
<button id="test">go to test.html</button>-->
<script>
    $('button').click(function () {
        sparrow.dirtyCheck();
    });
    $('input').keyup(function () {
        sparrow.dirtyCheck();
    });
    $('textarea').change(function () {
        sparrow.dirtyCheck();
    })
    $('#test').click(function () {
        sparrow.go('inner')
    });
</script>
</body>
</html>